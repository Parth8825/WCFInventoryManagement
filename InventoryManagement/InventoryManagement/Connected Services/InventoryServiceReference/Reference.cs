//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventoryManagement.InventoryServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesmanBO", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceInventory")]
    [System.SerializableAttribute()]
    public partial class SalesmanBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CommisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SalesmanIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesmanNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Commision {
            get {
                return this.CommisionField;
            }
            set {
                if ((this.CommisionField.Equals(value) != true)) {
                    this.CommisionField = value;
                    this.RaisePropertyChanged("Commision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SalesmanId {
            get {
                return this.SalesmanIdField;
            }
            set {
                if ((this.SalesmanIdField.Equals(value) != true)) {
                    this.SalesmanIdField = value;
                    this.RaisePropertyChanged("SalesmanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesmanName {
            get {
                return this.SalesmanNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesmanNameField, value) != true)) {
                    this.SalesmanNameField = value;
                    this.RaisePropertyChanged("SalesmanName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerBO", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceInventory")]
    [System.SerializableAttribute()]
    public partial class CustomerBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SalesIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((this.GradeField.Equals(value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SalesId {
            get {
                return this.SalesIdField;
            }
            set {
                if ((this.SalesIdField.Equals(value) != true)) {
                    this.SalesIdField = value;
                    this.RaisePropertyChanged("SalesId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderBO", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceInventory")]
    [System.SerializableAttribute()]
    public partial class OrderBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PurchAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SalesmanIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNo {
            get {
                return this.OrderNoField;
            }
            set {
                if ((this.OrderNoField.Equals(value) != true)) {
                    this.OrderNoField = value;
                    this.RaisePropertyChanged("OrderNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PurchAmt {
            get {
                return this.PurchAmtField;
            }
            set {
                if ((this.PurchAmtField.Equals(value) != true)) {
                    this.PurchAmtField = value;
                    this.RaisePropertyChanged("PurchAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SalesmanId {
            get {
                return this.SalesmanIdField;
            }
            set {
                if ((this.SalesmanIdField.Equals(value) != true)) {
                    this.SalesmanIdField = value;
                    this.RaisePropertyChanged("SalesmanId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InventoryServiceReference.ISalesmanService")]
    public interface ISalesmanService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesmanService/GetSalesman", ReplyAction="http://tempuri.org/ISalesmanService/GetSalesmanResponse")]
        InventoryManagement.InventoryServiceReference.SalesmanBO[] GetSalesman();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesmanService/GetSalesman", ReplyAction="http://tempuri.org/ISalesmanService/GetSalesmanResponse")]
        System.Threading.Tasks.Task<InventoryManagement.InventoryServiceReference.SalesmanBO[]> GetSalesmanAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesmanService/InsertNewSalesman", ReplyAction="http://tempuri.org/ISalesmanService/InsertNewSalesmanResponse")]
        int InsertNewSalesman(InventoryManagement.InventoryServiceReference.SalesmanBO newSalesman);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesmanService/InsertNewSalesman", ReplyAction="http://tempuri.org/ISalesmanService/InsertNewSalesmanResponse")]
        System.Threading.Tasks.Task<int> InsertNewSalesmanAsync(InventoryManagement.InventoryServiceReference.SalesmanBO newSalesman);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesmanService/UpdateSalesman", ReplyAction="http://tempuri.org/ISalesmanService/UpdateSalesmanResponse")]
        int UpdateSalesman(InventoryManagement.InventoryServiceReference.SalesmanBO salesman);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesmanService/UpdateSalesman", ReplyAction="http://tempuri.org/ISalesmanService/UpdateSalesmanResponse")]
        System.Threading.Tasks.Task<int> UpdateSalesmanAsync(InventoryManagement.InventoryServiceReference.SalesmanBO salesman);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesmanService/DeleteSalesman", ReplyAction="http://tempuri.org/ISalesmanService/DeleteSalesmanResponse")]
        int DeleteSalesman(InventoryManagement.InventoryServiceReference.SalesmanBO salesman);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesmanService/DeleteSalesman", ReplyAction="http://tempuri.org/ISalesmanService/DeleteSalesmanResponse")]
        System.Threading.Tasks.Task<int> DeleteSalesmanAsync(InventoryManagement.InventoryServiceReference.SalesmanBO salesman);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalesmanServiceChannel : InventoryManagement.InventoryServiceReference.ISalesmanService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalesmanServiceClient : System.ServiceModel.ClientBase<InventoryManagement.InventoryServiceReference.ISalesmanService>, InventoryManagement.InventoryServiceReference.ISalesmanService {
        
        public SalesmanServiceClient() {
        }
        
        public SalesmanServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SalesmanServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesmanServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesmanServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public InventoryManagement.InventoryServiceReference.SalesmanBO[] GetSalesman() {
            return base.Channel.GetSalesman();
        }
        
        public System.Threading.Tasks.Task<InventoryManagement.InventoryServiceReference.SalesmanBO[]> GetSalesmanAsync() {
            return base.Channel.GetSalesmanAsync();
        }
        
        public int InsertNewSalesman(InventoryManagement.InventoryServiceReference.SalesmanBO newSalesman) {
            return base.Channel.InsertNewSalesman(newSalesman);
        }
        
        public System.Threading.Tasks.Task<int> InsertNewSalesmanAsync(InventoryManagement.InventoryServiceReference.SalesmanBO newSalesman) {
            return base.Channel.InsertNewSalesmanAsync(newSalesman);
        }
        
        public int UpdateSalesman(InventoryManagement.InventoryServiceReference.SalesmanBO salesman) {
            return base.Channel.UpdateSalesman(salesman);
        }
        
        public System.Threading.Tasks.Task<int> UpdateSalesmanAsync(InventoryManagement.InventoryServiceReference.SalesmanBO salesman) {
            return base.Channel.UpdateSalesmanAsync(salesman);
        }
        
        public int DeleteSalesman(InventoryManagement.InventoryServiceReference.SalesmanBO salesman) {
            return base.Channel.DeleteSalesman(salesman);
        }
        
        public System.Threading.Tasks.Task<int> DeleteSalesmanAsync(InventoryManagement.InventoryServiceReference.SalesmanBO salesman) {
            return base.Channel.DeleteSalesmanAsync(salesman);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InventoryServiceReference.ICustomerService")]
    public interface ICustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomer", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerResponse")]
        InventoryManagement.InventoryServiceReference.CustomerBO[] GetCustomer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomer", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerResponse")]
        System.Threading.Tasks.Task<InventoryManagement.InventoryServiceReference.CustomerBO[]> GetCustomerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/InsertNewCustomer", ReplyAction="http://tempuri.org/ICustomerService/InsertNewCustomerResponse")]
        int InsertNewCustomer(InventoryManagement.InventoryServiceReference.CustomerBO newCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/InsertNewCustomer", ReplyAction="http://tempuri.org/ICustomerService/InsertNewCustomerResponse")]
        System.Threading.Tasks.Task<int> InsertNewCustomerAsync(InventoryManagement.InventoryServiceReference.CustomerBO newCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomerService/UpdateCustomerResponse")]
        int UpdateCustomer(InventoryManagement.InventoryServiceReference.CustomerBO customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomerService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task<int> UpdateCustomerAsync(InventoryManagement.InventoryServiceReference.CustomerBO customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomerService/DeleteCustomerResponse")]
        int DeleteCustomer(InventoryManagement.InventoryServiceReference.CustomerBO customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomerService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<int> DeleteCustomerAsync(InventoryManagement.InventoryServiceReference.CustomerBO customer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerServiceChannel : InventoryManagement.InventoryServiceReference.ICustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerServiceClient : System.ServiceModel.ClientBase<InventoryManagement.InventoryServiceReference.ICustomerService>, InventoryManagement.InventoryServiceReference.ICustomerService {
        
        public CustomerServiceClient() {
        }
        
        public CustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public InventoryManagement.InventoryServiceReference.CustomerBO[] GetCustomer() {
            return base.Channel.GetCustomer();
        }
        
        public System.Threading.Tasks.Task<InventoryManagement.InventoryServiceReference.CustomerBO[]> GetCustomerAsync() {
            return base.Channel.GetCustomerAsync();
        }
        
        public int InsertNewCustomer(InventoryManagement.InventoryServiceReference.CustomerBO newCustomer) {
            return base.Channel.InsertNewCustomer(newCustomer);
        }
        
        public System.Threading.Tasks.Task<int> InsertNewCustomerAsync(InventoryManagement.InventoryServiceReference.CustomerBO newCustomer) {
            return base.Channel.InsertNewCustomerAsync(newCustomer);
        }
        
        public int UpdateCustomer(InventoryManagement.InventoryServiceReference.CustomerBO customer) {
            return base.Channel.UpdateCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCustomerAsync(InventoryManagement.InventoryServiceReference.CustomerBO customer) {
            return base.Channel.UpdateCustomerAsync(customer);
        }
        
        public int DeleteCustomer(InventoryManagement.InventoryServiceReference.CustomerBO customer) {
            return base.Channel.DeleteCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCustomerAsync(InventoryManagement.InventoryServiceReference.CustomerBO customer) {
            return base.Channel.DeleteCustomerAsync(customer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InventoryServiceReference.IOrderService")]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrder", ReplyAction="http://tempuri.org/IOrderService/GetOrderResponse")]
        InventoryManagement.InventoryServiceReference.OrderBO[] GetOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrder", ReplyAction="http://tempuri.org/IOrderService/GetOrderResponse")]
        System.Threading.Tasks.Task<InventoryManagement.InventoryServiceReference.OrderBO[]> GetOrderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/InsertNewOrder", ReplyAction="http://tempuri.org/IOrderService/InsertNewOrderResponse")]
        int InsertNewOrder(InventoryManagement.InventoryServiceReference.OrderBO newOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/InsertNewOrder", ReplyAction="http://tempuri.org/IOrderService/InsertNewOrderResponse")]
        System.Threading.Tasks.Task<int> InsertNewOrderAsync(InventoryManagement.InventoryServiceReference.OrderBO newOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateOrder", ReplyAction="http://tempuri.org/IOrderService/UpdateOrderResponse")]
        int UpdateOrder(InventoryManagement.InventoryServiceReference.OrderBO order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateOrder", ReplyAction="http://tempuri.org/IOrderService/UpdateOrderResponse")]
        System.Threading.Tasks.Task<int> UpdateOrderAsync(InventoryManagement.InventoryServiceReference.OrderBO order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DeleteOrder", ReplyAction="http://tempuri.org/IOrderService/DeleteOrderResponse")]
        int DeleteOrder(InventoryManagement.InventoryServiceReference.OrderBO order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DeleteOrder", ReplyAction="http://tempuri.org/IOrderService/DeleteOrderResponse")]
        System.Threading.Tasks.Task<int> DeleteOrderAsync(InventoryManagement.InventoryServiceReference.OrderBO order);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : InventoryManagement.InventoryServiceReference.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.ClientBase<InventoryManagement.InventoryServiceReference.IOrderService>, InventoryManagement.InventoryServiceReference.IOrderService {
        
        public OrderServiceClient() {
        }
        
        public OrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public InventoryManagement.InventoryServiceReference.OrderBO[] GetOrder() {
            return base.Channel.GetOrder();
        }
        
        public System.Threading.Tasks.Task<InventoryManagement.InventoryServiceReference.OrderBO[]> GetOrderAsync() {
            return base.Channel.GetOrderAsync();
        }
        
        public int InsertNewOrder(InventoryManagement.InventoryServiceReference.OrderBO newOrder) {
            return base.Channel.InsertNewOrder(newOrder);
        }
        
        public System.Threading.Tasks.Task<int> InsertNewOrderAsync(InventoryManagement.InventoryServiceReference.OrderBO newOrder) {
            return base.Channel.InsertNewOrderAsync(newOrder);
        }
        
        public int UpdateOrder(InventoryManagement.InventoryServiceReference.OrderBO order) {
            return base.Channel.UpdateOrder(order);
        }
        
        public System.Threading.Tasks.Task<int> UpdateOrderAsync(InventoryManagement.InventoryServiceReference.OrderBO order) {
            return base.Channel.UpdateOrderAsync(order);
        }
        
        public int DeleteOrder(InventoryManagement.InventoryServiceReference.OrderBO order) {
            return base.Channel.DeleteOrder(order);
        }
        
        public System.Threading.Tasks.Task<int> DeleteOrderAsync(InventoryManagement.InventoryServiceReference.OrderBO order) {
            return base.Channel.DeleteOrderAsync(order);
        }
    }
}
